{"file":"index-DPGL-beq.js","mappings":"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","names":["_ssrRenderAttrs","_ssrIncludeBooleanAttr","_ssrLooseContain","_ssrLooseEqual","_ssrRenderAttr"],"sources":["../../../../utils/api.js","../../../../components/chart.js","../../../../pages/index.vue"],"sourcesContent":["import axios from 'axios'\r\n\r\nexport async function getPrices() {\r\n  try {\r\n    const response = await axios.get(`http://localhost:3001/api/prices`);\r\n    const data = response.data;\r\n    console.log(\"Тут я получил данные с сервера: \",data);\r\n    return data;\r\n  } catch (error) {\r\n    console.error('Error:', error)\r\n  }\r\n}\r\n\r\n//Функция для расчёта начала периода\r\nfunction getStartDate(period) {\r\n  switch (period) {\r\n    case 'day':\r\n      return new Date(Date.now() - 24 * 60 * 60 * 1000);\r\n    case 'week':\r\n      return new Date(Date.now() - 7 * 24 * 60 * 60 * 1000);\r\n    case 'month':\r\n      return new Date(Date.now() - 30 * 24 * 60 * 60 * 1000);\r\n    case 'year':\r\n      return new Date(Date.now() - 365 * 24 * 60 * 60 * 1000);\r\n    default:\r\n      return Date.parse(startDate); // использовать введенную пользователем дату\r\n  }\r\n}\r\n\r\nfunction getEndDate(period) {\r\n  switch (period) {\r\n    case 'day':\r\n      return new Date();\r\n    case 'week':\r\n      return new Date();\r\n    case 'month':\r\n      return new Date();\r\n    case 'year':\r\n      return new Date();\r\n    default:\r\n      return Date.parse(endDate); // использовать введенную пользователем дату\r\n  }\r\n}\r\n\r\n//Функция для заполнения недостающих данных нулями\r\nfunction fillMissingData(data, startDate, endDate) {\r\n  const filledData = [];\r\n  for (let i = startDate; i <= endDate; i += 24 * 60 * 60 * 1000) {\r\n    const found = data.find(item => Date.parse(item.timestamp) === i);\r\n    if (found) {\r\n      filledData.push(found);\r\n    } else {\r\n      filledData.push({ timestamp: new Date(i), price: 0 });\r\n    }\r\n  }\r\n  return filledData;\r\n}","import { Chart } from 'chart.js'\r\n\r\nexport function createChart(ctx, data) {\r\n  const chart = new Chart(ctx, {\r\n    type: 'line',\r\n    data: {\r\n      labels: data.map(price => price.timestamp),\r\n      datasets: [{\r\n        label: 'Цена на биткоин',\r\n        data: data.map(price => price.price),\r\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n        borderColor: 'rgba(255, 99, 132, 1)',\r\n        borderWidth: 1\r\n      }]\r\n    },\r\n    options: {\r\n      scales: {\r\n        yAxes: [{\r\n          ticks: {\r\n            beginAtZero: true\r\n          }\r\n        }]\r\n      }\r\n    }\r\n  })\r\n  return chart\r\n}","<template>\n  <div>\n    <h1>Исторические данные о ценах на биткоин</h1>\n    <form @submit.prevent=\"loadPrices\">\n      <select v-model=\"period\">\n        <option value=\"day\">День</option>\n        <option value=\"week\">Неделя</option>\n        <option value=\"month\">Месяц</option>\n        <option value=\"year\">Год</option>\n        <option value=\"custom\">Свой период</option>\n      </select>\n      <input v-if=\"period === 'custom'\" type=\"date\" v-model=\"startDate\">\n      <input v-if=\"period === 'custom'\" type=\"date\" v-model=\"endDate\">\n      <button type=\"submit\">Получить данные</button>\n    </form>\n    <div v-if=\"prices.length > 0\">\n      <canvas ref=\"chart\" v-if=\"chartLoaded\"></canvas>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { getPrices } from '../utils/api'\nimport { createChart } from '../components/chart'\nimport axios from 'axios'\n\nexport default {\n  data() {\n    return {\n      chartLoaded: false,\n      period: 'day',\n      startDate: '',\n      endDate: '',\n      prices: []\n    }\n  },\n  methods: {\n    async loadPrices() {\n      try {\n        const params = {\n          period: this.period\n        };\n        if (this.period === 'custom') {\n          params.startDate = this.startDate;\n          params.endDate = this.endDate;\n        }\n        const data = await getPrices(this.period);\n        console.log('Это вывод в index.vue', data);\n        this.prices = data;\n        this.chartLoaded = true;\n          if (this.$refs.chart && this.$refs.chart.length > 0) {\n            const ctx = this.$refs.chart.getContext('2d')\n            const chart = createChart(ctx, this.prices)\n            this.chart = chart\n          } else {\n              console.error('Элемент canvas с рефом chart не существует')\n           }\n      } catch (error) {\n        console.error('Error:', error)\n      }\n    }\n  },\n  mounted() {\n    this.chartLoaded = true;\n    this.loadPrices();\n  }\n}\n</script>"],"version":3}